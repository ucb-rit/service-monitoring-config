# CollectionSpace Common Nagios configuration
# 
# commands.cfg

########################################################################
# Commands that use the NRPE system on the client host(s), to monitor
# the status of resources or other conditions on that host by running
# plugin code on the host itself.
#
# The following commands require that:
# * Nagios, NRPE (Nagios Remote Plugin Executor), the Nagios plugins
#   package, and appropriate individual Nagios plugins (e.g. check_disk)
#   are installed on the client host.
# * NRPE has been configured, as needed, in $NAGIOS_HOME/nrpe.cfg
# * The NRPE daemon is actively running on the client host, having been
#   launched via xinetd (preferred) or inetd (both with TCP Wrapper
#   support either built-in, as it often is in xinetd, or configured
#   for this service), or directly via chkconfig (deprecated).
# * The client host has been configured to grant access to one or more
#   monitoring server(s) running Nagios. This is typically done in
#   both the client's xinetd config (or, for inetd, in a TCP Wrapper
#   access control rule), and in its host firewall rules.
########################################################################

# None yet defined here

########################################################################
# Commands that communicate with services on the client host(s)
########################################################################

# For details regarding the options in the "check_http" plugin,
# used in one or more commands below, see
# http://nagios-plugins.org/doc/man/check_http.html
#
# When testing the 'check' commands that retrieve data from a web page 
# via check_http, below, you can generate errors by changing a
# "--string=" value to, say, "NonExistentString" or a "--regex=" value
# to a regular expression known not to match expected data on that page.

# -------------------------------------------------------------
# Check CollectionSpace Webapps UCB Collections Portal App Page
# -------------------------------------------------------------

# Check a specified CollectionSpace Webapps Collections Portal application page
# using a secure, encrypted connection (via HTTPS; i.e. HTTP layered on TLS).
# Verify that an expected string is returned within the response.
#
# Regarding the macros below:
# - $ARG1$ is used to specify a leading path component, if any, unique to the portal.

define command {
  command_name  check-collectionspace-webapps-ucb-collections-portal-app-page
  command_line  /usr/lib/nagios/plugins/check_http --hostname=$HOSTADDRESS$ --url=/$ARG1$/search/search/ --ssl=1 --onredirect=follow --string="keyword"
}

# ---------------------------------------------------------------
# Check CollectionSpace Webapps Collections Portal Search Results
# ---------------------------------------------------------------

# TODO: Requires additional work to identify correct authentication/token
# information to send with request

# Send a search request to a specified CollectionSpace Webapps Collections Portal,
# via the "Keyword" field on that portal, using a secure, encrypted connection
# (via HTTPS; i.e. HTTP layered on TLS).
#
# Verify that at least one item is returned in search results.
# If this element is not returned, identify this as an error condition.
#
# Regarding the macros below:
# - $ARG1$ is used to specify a leading path component, if any, unique to the portal.
# - $ARG2$ is used to specify the keyword on which to search.

define command {
  command_name  check-collectionspace-webapps-ucb-collections-portal-search
  command_line  /usr/lib/nagios/plugins/check_http --hostname=$HOSTADDRESS$ --url=/$ARG1$/search/search/ --header="Referer: $HOSTADDRESS$$ARG1%/search/search/" --header="Cookie: placeholder_for_cookie_here" --post="keyword%3d$ARG2$" --ssl=1 --onredirect=follow --regex="[0-9]*[1-9]+[0-9]* items found"
}

